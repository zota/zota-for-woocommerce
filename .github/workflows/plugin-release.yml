on:
  push:
    tags:
      - '*.*.*'

name: Plugin Release

permissions:
  contents: write

jobs:
  build:
    name: Plugin Release Creation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Get version
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Generate Changelog
        uses: scottbrenner/generate-changelog-action@master
        id: Changelog
        env:
          REPO: ${{ github.repository }}

      - name: Get composer cache directory
        id: composercache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Prepare release
        run: |
          sudo apt-get install -y subversion
          composer install --no-dev --no-scripts --prefer-dist --optimize-autoloader
          sed -ix "s/Stable tag: .*/Stable tag: ${{ steps.vars.outputs.tag }}/" readme.txt
          sed -ix "s/Version: .*/Version: ${{ steps.vars.outputs.tag }}/" zota-for-woocommerce.php
          sed -ix "s/define( 'ZOTA_WC_VERSION'.*/define( 'ZOTA_WC_VERSION', '${{ steps.vars.outputs.tag }}' );/" zota-for-woocommerce.php
          rm -f readme.txtx zota-for-woocommerce.phpx
        shell: bash

      - name: Push to WordPress Plugin Deploy
        uses: 10up/action-wordpress-plugin-deploy@stable
        with:
          generate-zip: true
        env:
          SLUG: zota-for-woocommerce
          SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
          SVN_USERNAME: ${{ secrets.SVN_USERNAME }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ${{ github.event.repository.name }}.zip
          tag_name: ${{ steps.vars.outputs.tag }}
          name: Release ${{ steps.vars.outputs.tag }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
